{"ast":null,"code":"import _classCallCheck from \"/Users/nikeshpatel/Documents/Brigit_Coding_Test/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nikeshpatel/Documents/Brigit_Coding_Test/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nikeshpatel/Documents/Brigit_Coding_Test/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nikeshpatel/Documents/Brigit_Coding_Test/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nikeshpatel/Documents/Brigit_Coding_Test/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nikeshpatel/Documents/Brigit_Coding_Test/my-app/src/MinesweeperBoard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MinesweeperCell from './MinesweeperCell';\n\nvar MinesweeperBoard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MinesweeperBoard, _React$Component);\n\n  function MinesweeperBoard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MinesweeperBoard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MinesweeperBoard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      boardData: _this.setupBoard(_this.props.height, _this.props.width)\n    };\n    return _this;\n  }\n\n  _createClass(MinesweeperBoard, [{\n    key: \"setupBoard\",\n    // Gets initial board data\n    value: function setupBoard(height, width) {\n      var boardData = this.setBoardData(height, width);\n      boardData = this.setMines(height, width, boardData);\n      boardData = this.getNearbyMineCount(height, width, boardData);\n      return boardData;\n    }\n  }, {\n    key: \"setBoardData\",\n    value: function setBoardData(height, width) {\n      var boardData = [];\n\n      for (var i = 0; i < height; i++) {\n        boardData.push([]);\n\n        for (var j = 0; j < width; j++) {\n          boardData[i][j] = {\n            x: i,\n            y: j,\n            nearbyMineCount: 0,\n            isMine: false,\n            isRevealed: false,\n            isEmpty: false,\n            isFlagged: false\n          };\n        }\n      }\n\n      return boardData;\n    }\n  }, {\n    key: \"getRandomInt\",\n    value: function getRandomInt(max) {\n      return Math.floor(Math.random() * Math.floor(max));\n    }\n  }, {\n    key: \"setMines\",\n    value: function setMines(height, width, boardData) {\n      var x = 0;\n      var y = 0;\n      var mines = 0;\n\n      while (mines < 10) {\n        x = this.getRandomInt(8);\n        y = this.getRandomInt(8);\n\n        if (!boardData[x][y].isMine) {\n          boardData[x][y].isMine = true;\n          mines++;\n        }\n      }\n\n      return boardData;\n    }\n  }, {\n    key: \"getNearbyMineCount\",\n    value: function getNearbyMineCount(height, width, boardData) {\n      var mineCount = 0;\n\n      for (var i = 0; i < height; i++) {\n        for (var j = 0; j < width; j++) {\n          mineCount = this.mineCounter(i, j, boardData);\n          boardData[i][j].nearbyMineCount = mineCount;\n\n          if (mineCount == 0) {\n            boardData[i][j].isEmpty = true;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"mineCounter\",\n    value: function mineCounter(x, y, boardData) {\n      var mineCount = 0; //top\n\n      if (x > 0 && boardData[x - 1][y].isMine == true) {\n        mineCount++;\n      } //bottom\n\n\n      if (x < 7 && boardData[x + 1][y].isMine == true) {\n        mineCount++;\n      } //left\n\n\n      if (y > 0 && boardData[x][y - 1].isMine == true) {\n        mineCount++;\n      } //right\n\n\n      if (y < 7 && boardData[x][y + 1].isMine == true) {\n        mineCount++;\n      } //top-left\n\n\n      if (x > 0 && y > 0 && boardData[x - 1][y - 1].isMine == true) {\n        mineCount++;\n      } //top-right\n\n\n      if (x > 0 && y < 7 && boardData[x - 1][y + 1].isMine == true) {\n        mineCount++;\n      } //bottom-left\n\n\n      if (x < 7 && y > 0 && boardData[x + 1][y - 1].isMine == true) {\n        mineCount++;\n      } //bottom-right\n\n\n      if (x < 7 && y < 7 && boardData[x + 1][y + 1].isMine == true) {\n        mineCount++;\n      }\n\n      return mineCount;\n    }\n  }, {\n    key: \"showBoard\",\n    value: function showBoard() {\n      var update = this.state.boardData;\n\n      for (var i = 0; i < 8; i++) {\n        for (var j = 0; j < 8; j++) {\n          update[i][j].isRevealed = true;\n        }\n      }\n\n      this.setState({\n        boardData: update\n      });\n    }\n  }, {\n    key: \"showEmpty\",\n    value: function showEmpty(x, y, boardData) {\n      if (x > 0 && !boardData[x - 1][y].isFlagged && !boardData[x - 1][y].isRevealed && (boardData[x - 1][y].isEmpty || !boardData[x - 1][y].isMine)) {\n        boardData[x - 1][y].isRevealed = true;\n        this.showEmpty(x - 1, y, boardData);\n      } //bottom\n\n\n      if (x < 7 && !boardData[x + 1][y].isFlagged && !boardData[x + 1][y].isRevealed && (boardData[x + 1][y].isEmpty || !boardData[x + 1][y].isMine)) {\n        boardData[x + 1][y].isRevealed = true;\n        this.showEmpty(x + 1, y, boardData);\n      } //left\n\n\n      if (y > 0 && !boardData[x][y - 1].isFlagged && !boardData[x][y - 1].isRevealed && (boardData[x][y - 1].isEmpty || !boardData[x][y - 1].isMine)) {\n        boardData[x][y - 1].isRevealed = true;\n        this.showEmpty(x, y - 1, boardData);\n      } //right\n\n\n      if (y < 7 && !boardData[x][y + 1].isFlagged && !boardData[x][y + 1].isRevealed && (boardData[x][y + 1].isEmpty || !boardData[x][y + 1].isMine)) {\n        boardData[x][y + 1].isRevealed = true;\n        this.showEmpty(x, y + 1, boardData);\n      } //top-left\n\n\n      if (x > 0 && y > 0 && !boardData[x - 1][y - 1].isFlagged && !boardData[x - 1][y - 1].isRevealed && (boardData[x - 1][y - 1].isEmpty || !boardData[x - 1][y - 1].isMine)) {\n        boardData[x - 1][y - 1].isRevealed = true;\n        this.showEmpty(x - 1, y - 1, boardData);\n      } //top-right\n\n\n      if (x > 0 && y < 7 && !boardData[x - 1][y + 1].isFlagged && !boardData[x - 1][y + 1].isRevealed && (boardData[x - 1][y + 1].isEmpty || !boardData[x - 1][y + 1].isMine)) {\n        boardData[x - 1][y + 1].isRevealed = true;\n        this.showEmpty(x - 1, y + 1, boardData);\n      } //bottom-left\n\n\n      if (x < 7 && y > 0 && !boardData[x + 1][y - 1].isFlagged && !boardData[x + 1][y - 1].isRevealed && (boardData[x + 1][y - 1].isEmpty || !boardData[x + 1][y - 1].isMine)) {\n        boardData[x + 1][y - 1].isRevealed = true;\n        this.showEmpty(x + 1, y - 1, boardData);\n      } //bottom-right\n\n\n      if (x < 7 && y < 7 && !boardData[x + 1][y + 1].isFlagged && !boardData[x + 1][y + 1].isRevealed && (boardData[x + 1][y + 1].isEmpty || !boardData[x + 1][y + 1].isMine)) {\n        boardData[x + 1][y + 1].isRevealed = true;\n        this.showEmpty(x + 1, y + 1, boardData);\n      }\n\n      return boardData;\n    }\n  }, {\n    key: \"hiddenCells\",\n    value: function hiddenCells(boardData) {\n      var hiddenCount = 0;\n\n      for (var i = 0; i < 8; i++) {\n        for (var j = 0; j < 8; j++) {\n          if (!boardData[i][j].isRevealed) {\n            hiddenCount++;\n          }\n        }\n      }\n\n      return hiddenCount;\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(x, y) {\n      if (this.state.boardData[x][y].isRevealed || this.state.boardData[x][y].isFlagged) {\n        return null;\n      }\n\n      if (this.state.boardData[x][y].isMine) {\n        this.showBoard();\n        alert(\"game over, you lost\");\n      }\n\n      var updated = this.state.boardData;\n      updated[x][y].isFlagged = false;\n      updated[x][y].isRevealed = true;\n\n      if (updated[x][y].isEmpty) {\n        updated = this.showEmpty(x, y, updated);\n      }\n\n      if (this.hiddenCells(updated) == 10) {\n        this.showBoard();\n        alert(\"You Win\");\n      }\n\n      this.setState({\n        boardData: updated\n      });\n    }\n  }, {\n    key: \"checkFlagWin\",\n    value: function checkFlagWin(boardData) {\n      var flagMineCount = 0;\n\n      for (var i = 0; i < 8; i++) {\n        for (var j = 0; j < 8; j++) {\n          if (boardData[i][j].isFlagged && boardData[i][j].isMine) {\n            flagMineCount++;\n          }\n        }\n      }\n\n      var win = 0;\n\n      if (flagMineCount == 10) {\n        win = 1;\n      }\n\n      return win;\n    }\n  }, {\n    key: \"handleFlagging\",\n    value: function handleFlagging(e, x, y) {\n      e.preventDefault();\n      var board = this.state.boardData;\n\n      if (board[x][y].isRevealed) {\n        return;\n      }\n\n      if (board[x][y].isFlagged) {\n        board[x][y].isFlagged = false;\n      } else {\n        board[x][y].isFlagged = true;\n      }\n\n      if (this.checkFlagWin(board) == 1) {\n        this.revealBoard();\n        alert(\"You Win\");\n      }\n\n      this.setState({\n        boardData: board\n      });\n    }\n  }, {\n    key: \"renderBoard\",\n    value: function renderBoard(boardData) {\n      var _this2 = this;\n\n      return data.map(function (datarow) {\n        return datarow.map(function (dataitem) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 310\n            },\n            __self: this\n          }, React.createElement(MinesweeperCell, {\n            onClick: function onClick() {\n              return _this2.handleClick(dataitem.x, dataitem.y);\n            },\n            cMenu: function cMenu(e) {\n              return _this2.handleFlagging(e, dataitem.x, dataitem.y);\n            },\n            value: dataitem,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 311\n            },\n            __self: this\n          }));\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, this.renderBoard(this.state.boardData));\n    }\n  }]);\n\n  return MinesweeperBoard;\n}(React.Component);\n\nexport { MinesweeperBoard as default };\nMinesweeperBoard.propTypes = {\n  height: PropTypes.number,\n  width: PropTypes.number\n};","map":{"version":3,"sources":["/Users/nikeshpatel/Documents/Brigit_Coding_Test/my-app/src/MinesweeperBoard.js"],"names":["React","PropTypes","MinesweeperCell","MinesweeperBoard","state","boardData","setupBoard","props","height","width","setBoardData","setMines","getNearbyMineCount","i","push","j","x","y","nearbyMineCount","isMine","isRevealed","isEmpty","isFlagged","max","Math","floor","random","mines","getRandomInt","mineCount","mineCounter","update","setState","showEmpty","hiddenCount","showBoard","alert","updated","hiddenCells","flagMineCount","win","e","preventDefault","board","checkFlagWin","revealBoard","data","map","datarow","dataitem","handleClick","handleFlagging","renderBoard","Component","propTypes","number"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;IAEqBC,gB;;;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,SAAS,EAAE,MAAKC,UAAL,CAAgB,MAAKC,KAAL,CAAWC,MAA3B,EAAmC,MAAKD,KAAL,CAAWE,KAA9C;AADL,K;;;;;;AAKR;+BACWD,M,EAAQC,K,EACnB;AACE,UAAIJ,SAAS,GAAG,KAAKK,YAAL,CAAkBF,MAAlB,EAA0BC,KAA1B,CAAhB;AACAJ,MAAAA,SAAS,GAAG,KAAKM,QAAL,CAAcH,MAAd,EAAsBC,KAAtB,EAA6BJ,SAA7B,CAAZ;AACAA,MAAAA,SAAS,GAAG,KAAKO,kBAAL,CAAwBJ,MAAxB,EAAgCC,KAAhC,EAAuCJ,SAAvC,CAAZ;AACA,aAAOA,SAAP;AACD;;;iCAEYG,M,EAAQC,K,EACrB;AACE,UAAIJ,SAAS,GAAG,EAAhB;;AACA,WAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,MAApB,EAA4BK,CAAC,EAA7B,EACA;AACER,QAAAA,SAAS,CAACS,IAAV,CAAe,EAAf;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAApB,EAA2BM,CAAC,EAA5B,EACA;AACEV,UAAAA,SAAS,CAACQ,CAAD,CAAT,CAAaE,CAAb,IACA;AACEC,YAAAA,CAAC,EAAEH,CADL;AAEEI,YAAAA,CAAC,EAAEF,CAFL;AAGEG,YAAAA,eAAe,EAAE,CAHnB;AAIEC,YAAAA,MAAM,EAAE,KAJV;AAKEC,YAAAA,UAAU,EAAE,KALd;AAMEC,YAAAA,OAAO,EAAE,KANX;AAOEC,YAAAA,SAAS,EAAE;AAPb,WADA;AAUD;AACF;;AACD,aAAOjB,SAAP;AACD;;;iCAEYkB,G,EACb;AACE,aAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAWF,GAAX,CAA3B,CAAP;AACD;;;6BAEQf,M,EAAQC,K,EAAOJ,S,EACxB;AACE,UAAIW,CAAC,GAAG,CAAR;AACA,UAAIC,CAAC,GAAG,CAAR;AACA,UAAIU,KAAK,GAAG,CAAZ;;AAEA,aAAOA,KAAK,GAAG,EAAf,EACA;AACEX,QAAAA,CAAC,GAAG,KAAKY,YAAL,CAAkB,CAAlB,CAAJ;AACAX,QAAAA,CAAC,GAAG,KAAKW,YAAL,CAAkB,CAAlB,CAAJ;;AACA,YAAI,CAACvB,SAAS,CAACW,CAAD,CAAT,CAAaC,CAAb,EAAgBE,MAArB,EACA;AACEd,UAAAA,SAAS,CAACW,CAAD,CAAT,CAAaC,CAAb,EAAgBE,MAAhB,GAAyB,IAAzB;AACAQ,UAAAA,KAAK;AACN;AACF;;AAED,aAAOtB,SAAP;AACD;;;uCAEkBG,M,EAAQC,K,EAAOJ,S,EAClC;AACE,UAAIwB,SAAS,GAAG,CAAhB;;AACA,WAAK,IAAIhB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,MAApB,EAA4BK,CAAC,EAA7B,EACA;AACE,aAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAApB,EAA2BM,CAAC,EAA5B,EACA;AACEc,UAAAA,SAAS,GAAG,KAAKC,WAAL,CAAiBjB,CAAjB,EAAoBE,CAApB,EAAuBV,SAAvB,CAAZ;AACAA,UAAAA,SAAS,CAACQ,CAAD,CAAT,CAAaE,CAAb,EAAgBG,eAAhB,GAAkCW,SAAlC;;AAEA,cAAIA,SAAS,IAAI,CAAjB,EACA;AACExB,YAAAA,SAAS,CAACQ,CAAD,CAAT,CAAaE,CAAb,EAAgBM,OAAhB,GAA0B,IAA1B;AACD;AAEF;AACF;AACF;;;gCAEWL,C,EAAGC,C,EAAGZ,S,EAClB;AACE,UAAIwB,SAAS,GAAG,CAAhB,CADF,CAEE;;AACA,UAAIb,CAAC,GAAG,CAAJ,IAASX,SAAS,CAACW,CAAC,GAAC,CAAH,CAAT,CAAeC,CAAf,EAAkBE,MAAlB,IAA4B,IAAzC,EACA;AACEU,QAAAA,SAAS;AACV,OANH,CAOE;;;AACA,UAAIb,CAAC,GAAG,CAAJ,IAASX,SAAS,CAACW,CAAC,GAAC,CAAH,CAAT,CAAeC,CAAf,EAAkBE,MAAlB,IAA4B,IAAzC,EACA;AACEU,QAAAA,SAAS;AACV,OAXH,CAYE;;;AACA,UAAIZ,CAAC,GAAG,CAAJ,IAASZ,SAAS,CAACW,CAAD,CAAT,CAAaC,CAAC,GAAC,CAAf,EAAkBE,MAAlB,IAA4B,IAAzC,EACA;AACEU,QAAAA,SAAS;AACV,OAhBH,CAiBE;;;AACA,UAAIZ,CAAC,GAAG,CAAJ,IAASZ,SAAS,CAACW,CAAD,CAAT,CAAaC,CAAC,GAAC,CAAf,EAAkBE,MAAlB,IAA4B,IAAzC,EACA;AACEU,QAAAA,SAAS;AACV,OArBH,CAsBE;;;AACA,UAAIb,CAAC,GAAG,CAAJ,IAASC,CAAC,GAAG,CAAb,IAAkBZ,SAAS,CAACW,CAAC,GAAC,CAAH,CAAT,CAAeC,CAAC,GAAC,CAAjB,EAAoBE,MAApB,IAA8B,IAApD,EACA;AACEU,QAAAA,SAAS;AACV,OA1BH,CA2BE;;;AACA,UAAIb,CAAC,GAAG,CAAJ,IAASC,CAAC,GAAG,CAAb,IAAkBZ,SAAS,CAACW,CAAC,GAAC,CAAH,CAAT,CAAeC,CAAC,GAAC,CAAjB,EAAoBE,MAApB,IAA8B,IAApD,EACA;AACEU,QAAAA,SAAS;AACV,OA/BH,CAgCE;;;AACA,UAAIb,CAAC,GAAG,CAAJ,IAASC,CAAC,GAAG,CAAb,IAAkBZ,SAAS,CAACW,CAAC,GAAC,CAAH,CAAT,CAAeC,CAAC,GAAC,CAAjB,EAAoBE,MAApB,IAA8B,IAApD,EACA;AACEU,QAAAA,SAAS;AACV,OApCH,CAqCE;;;AACA,UAAIb,CAAC,GAAG,CAAJ,IAASC,CAAC,GAAG,CAAb,IAAkBZ,SAAS,CAACW,CAAC,GAAC,CAAH,CAAT,CAAeC,CAAC,GAAC,CAAjB,EAAoBE,MAApB,IAA8B,IAApD,EACA;AACEU,QAAAA,SAAS;AACV;;AAED,aAAOA,SAAP;AACD;;;gCAGD;AACE,UAAIE,MAAM,GAAG,KAAK3B,KAAL,CAAWC,SAAxB;;AACA,WAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EACA;AACE,aAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EACA;AACEgB,UAAAA,MAAM,CAAClB,CAAD,CAAN,CAAUE,CAAV,EAAaK,UAAb,GAA0B,IAA1B;AACD;AACF;;AACD,WAAKY,QAAL,CAAc;AACZ3B,QAAAA,SAAS,EAAE0B;AADC,OAAd;AAGD;;;8BAESf,C,EAAGC,C,EAAGZ,S,EAChB;AACE,UAAIW,CAAC,GAAG,CAAJ,IAAU,CAACX,SAAS,CAACW,CAAC,GAAC,CAAH,CAAT,CAAeC,CAAf,EAAkBK,SAAnB,IAAgC,CAACjB,SAAS,CAACW,CAAC,GAAC,CAAH,CAAT,CAAeC,CAAf,EAAkBG,UAAnD,KAAkEf,SAAS,CAACW,CAAC,GAAC,CAAH,CAAT,CAAeC,CAAf,EAAkBI,OAAlB,IAA6B,CAAChB,SAAS,CAACW,CAAC,GAAC,CAAH,CAAT,CAAeC,CAAf,EAAkBE,MAAlH,CAAd,EACA;AACEd,QAAAA,SAAS,CAACW,CAAC,GAAC,CAAH,CAAT,CAAeC,CAAf,EAAkBG,UAAlB,GAA+B,IAA/B;AACA,aAAKa,SAAL,CAAejB,CAAC,GAAC,CAAjB,EAAoBC,CAApB,EAAuBZ,SAAvB;AACD,OALH,CAME;;;AACA,UAAIW,CAAC,GAAG,CAAJ,IAAU,CAACX,SAAS,CAACW,CAAC,GAAC,CAAH,CAAT,CAAeC,CAAf,EAAkBK,SAAnB,IAAgC,CAACjB,SAAS,CAACW,CAAC,GAAC,CAAH,CAAT,CAAeC,CAAf,EAAkBG,UAAnD,KAAkEf,SAAS,CAACW,CAAC,GAAC,CAAH,CAAT,CAAeC,CAAf,EAAkBI,OAAlB,IAA6B,CAAChB,SAAS,CAACW,CAAC,GAAC,CAAH,CAAT,CAAeC,CAAf,EAAkBE,MAAlH,CAAd,EACA;AACEd,QAAAA,SAAS,CAACW,CAAC,GAAC,CAAH,CAAT,CAAeC,CAAf,EAAkBG,UAAlB,GAA+B,IAA/B;AACA,aAAKa,SAAL,CAAejB,CAAC,GAAC,CAAjB,EAAoBC,CAApB,EAAuBZ,SAAvB;AACD,OAXH,CAYE;;;AACA,UAAIY,CAAC,GAAG,CAAJ,IAAU,CAACZ,SAAS,CAACW,CAAD,CAAT,CAAaC,CAAC,GAAC,CAAf,EAAkBK,SAAnB,IAAgC,CAACjB,SAAS,CAACW,CAAD,CAAT,CAAaC,CAAC,GAAC,CAAf,EAAkBG,UAAnD,KAAkEf,SAAS,CAACW,CAAD,CAAT,CAAaC,CAAC,GAAC,CAAf,EAAkBI,OAAlB,IAA6B,CAAChB,SAAS,CAACW,CAAD,CAAT,CAAaC,CAAC,GAAC,CAAf,EAAkBE,MAAlH,CAAd,EACA;AACEd,QAAAA,SAAS,CAACW,CAAD,CAAT,CAAaC,CAAC,GAAC,CAAf,EAAkBG,UAAlB,GAA+B,IAA/B;AACA,aAAKa,SAAL,CAAejB,CAAf,EAAkBC,CAAC,GAAC,CAApB,EAAuBZ,SAAvB;AACD,OAjBH,CAkBE;;;AACA,UAAIY,CAAC,GAAG,CAAJ,IAAU,CAACZ,SAAS,CAACW,CAAD,CAAT,CAAaC,CAAC,GAAC,CAAf,EAAkBK,SAAnB,IAAgC,CAACjB,SAAS,CAACW,CAAD,CAAT,CAAaC,CAAC,GAAC,CAAf,EAAkBG,UAAnD,KAAkEf,SAAS,CAACW,CAAD,CAAT,CAAaC,CAAC,GAAC,CAAf,EAAkBI,OAAlB,IAA6B,CAAChB,SAAS,CAACW,CAAD,CAAT,CAAaC,CAAC,GAAC,CAAf,EAAkBE,MAAlH,CAAd,EACA;AACEd,QAAAA,SAAS,CAACW,CAAD,CAAT,CAAaC,CAAC,GAAC,CAAf,EAAkBG,UAAlB,GAA+B,IAA/B;AACA,aAAKa,SAAL,CAAejB,CAAf,EAAkBC,CAAC,GAAC,CAApB,EAAuBZ,SAAvB;AACD,OAvBH,CAwBE;;;AACA,UAAIW,CAAC,GAAG,CAAJ,IAASC,CAAC,GAAG,CAAb,IAAmB,CAACZ,SAAS,CAACW,CAAC,GAAC,CAAH,CAAT,CAAeC,CAAC,GAAC,CAAjB,EAAoBK,SAArB,IAAkC,CAACjB,SAAS,CAACW,CAAC,GAAC,CAAH,CAAT,CAAeC,CAAC,GAAC,CAAjB,EAAoBG,UAAvD,KAAsEf,SAAS,CAACW,CAAC,GAAC,CAAH,CAAT,CAAeC,CAAC,GAAC,CAAjB,EAAoBI,OAApB,IAA+B,CAAChB,SAAS,CAACW,CAAC,GAAC,CAAH,CAAT,CAAeC,CAAC,GAAC,CAAjB,EAAoBE,MAA1H,CAAvB,EACA;AACEd,QAAAA,SAAS,CAACW,CAAC,GAAC,CAAH,CAAT,CAAeC,CAAC,GAAC,CAAjB,EAAoBG,UAApB,GAAiC,IAAjC;AACA,aAAKa,SAAL,CAAejB,CAAC,GAAC,CAAjB,EAAoBC,CAAC,GAAC,CAAtB,EAAyBZ,SAAzB;AACD,OA7BH,CA8BE;;;AACA,UAAIW,CAAC,GAAG,CAAJ,IAASC,CAAC,GAAG,CAAb,IAAmB,CAACZ,SAAS,CAACW,CAAC,GAAC,CAAH,CAAT,CAAeC,CAAC,GAAC,CAAjB,EAAoBK,SAArB,IAAkC,CAACjB,SAAS,CAACW,CAAC,GAAC,CAAH,CAAT,CAAeC,CAAC,GAAC,CAAjB,EAAoBG,UAAvD,KAAsEf,SAAS,CAACW,CAAC,GAAC,CAAH,CAAT,CAAeC,CAAC,GAAC,CAAjB,EAAoBI,OAApB,IAA+B,CAAChB,SAAS,CAACW,CAAC,GAAC,CAAH,CAAT,CAAeC,CAAC,GAAC,CAAjB,EAAoBE,MAA1H,CAAvB,EACA;AACEd,QAAAA,SAAS,CAACW,CAAC,GAAC,CAAH,CAAT,CAAeC,CAAC,GAAC,CAAjB,EAAoBG,UAApB,GAAiC,IAAjC;AACA,aAAKa,SAAL,CAAejB,CAAC,GAAC,CAAjB,EAAoBC,CAAC,GAAC,CAAtB,EAAyBZ,SAAzB;AACD,OAnCH,CAoCE;;;AACA,UAAIW,CAAC,GAAG,CAAJ,IAASC,CAAC,GAAG,CAAb,IAAmB,CAACZ,SAAS,CAACW,CAAC,GAAC,CAAH,CAAT,CAAeC,CAAC,GAAC,CAAjB,EAAoBK,SAArB,IAAkC,CAACjB,SAAS,CAACW,CAAC,GAAC,CAAH,CAAT,CAAeC,CAAC,GAAC,CAAjB,EAAoBG,UAAvD,KAAsEf,SAAS,CAACW,CAAC,GAAC,CAAH,CAAT,CAAeC,CAAC,GAAC,CAAjB,EAAoBI,OAApB,IAA+B,CAAChB,SAAS,CAACW,CAAC,GAAC,CAAH,CAAT,CAAeC,CAAC,GAAC,CAAjB,EAAoBE,MAA1H,CAAvB,EACA;AACEd,QAAAA,SAAS,CAACW,CAAC,GAAC,CAAH,CAAT,CAAeC,CAAC,GAAC,CAAjB,EAAoBG,UAApB,GAAiC,IAAjC;AACA,aAAKa,SAAL,CAAejB,CAAC,GAAC,CAAjB,EAAoBC,CAAC,GAAC,CAAtB,EAAyBZ,SAAzB;AACD,OAzCH,CA0CE;;;AACA,UAAIW,CAAC,GAAG,CAAJ,IAASC,CAAC,GAAG,CAAb,IAAmB,CAACZ,SAAS,CAACW,CAAC,GAAC,CAAH,CAAT,CAAeC,CAAC,GAAC,CAAjB,EAAoBK,SAArB,IAAkC,CAACjB,SAAS,CAACW,CAAC,GAAC,CAAH,CAAT,CAAeC,CAAC,GAAC,CAAjB,EAAoBG,UAAvD,KAAsEf,SAAS,CAACW,CAAC,GAAC,CAAH,CAAT,CAAeC,CAAC,GAAC,CAAjB,EAAoBI,OAApB,IAA+B,CAAChB,SAAS,CAACW,CAAC,GAAC,CAAH,CAAT,CAAeC,CAAC,GAAC,CAAjB,EAAoBE,MAA1H,CAAvB,EACA;AACEd,QAAAA,SAAS,CAACW,CAAC,GAAC,CAAH,CAAT,CAAeC,CAAC,GAAC,CAAjB,EAAoBG,UAApB,GAAiC,IAAjC;AACA,aAAKa,SAAL,CAAejB,CAAC,GAAC,CAAjB,EAAoBC,CAAC,GAAC,CAAtB,EAAyBZ,SAAzB;AACD;;AAED,aAAOA,SAAP;AACD;;;gCAEWA,S,EACZ;AACE,UAAI6B,WAAW,GAAG,CAAlB;;AACA,WAAK,IAAIrB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EACA;AACE,aAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EACA;AACE,cAAI,CAACV,SAAS,CAACQ,CAAD,CAAT,CAAaE,CAAb,EAAgBK,UAArB,EACA;AACEc,YAAAA,WAAW;AACZ;AACF;AACF;;AACD,aAAOA,WAAP;AACD;;;gCAEWlB,C,EAAGC,C,EACf;AACE,UAAI,KAAKb,KAAL,CAAWC,SAAX,CAAqBW,CAArB,EAAwBC,CAAxB,EAA2BG,UAA3B,IAAyC,KAAKhB,KAAL,CAAWC,SAAX,CAAqBW,CAArB,EAAwBC,CAAxB,EAA2BK,SAAxE,EACA;AACE,eAAO,IAAP;AACD;;AAED,UAAI,KAAKlB,KAAL,CAAWC,SAAX,CAAqBW,CAArB,EAAwBC,CAAxB,EAA2BE,MAA/B,EACA;AACE,aAAKgB,SAAL;AACAC,QAAAA,KAAK,CAAC,qBAAD,CAAL;AACD;;AAED,UAAIC,OAAO,GAAG,KAAKjC,KAAL,CAAWC,SAAzB;AACAgC,MAAAA,OAAO,CAACrB,CAAD,CAAP,CAAWC,CAAX,EAAcK,SAAd,GAA0B,KAA1B;AACAe,MAAAA,OAAO,CAACrB,CAAD,CAAP,CAAWC,CAAX,EAAcG,UAAd,GAA2B,IAA3B;;AAEA,UAAIiB,OAAO,CAACrB,CAAD,CAAP,CAAWC,CAAX,EAAcI,OAAlB,EACA;AACEgB,QAAAA,OAAO,GAAG,KAAKJ,SAAL,CAAejB,CAAf,EAAkBC,CAAlB,EAAqBoB,OAArB,CAAV;AACD;;AAED,UAAI,KAAKC,WAAL,CAAiBD,OAAjB,KAA6B,EAAjC,EACA;AACE,aAAKF,SAAL;AACAC,QAAAA,KAAK,CAAC,SAAD,CAAL;AACD;;AAED,WAAKJ,QAAL,CAAc;AACZ3B,QAAAA,SAAS,EAAEgC;AADC,OAAd;AAGD;;;iCAEYhC,S,EACb;AACE,UAAIkC,aAAa,GAAG,CAApB;;AACA,WAAK,IAAI1B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EACA;AACE,aAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EACA;AACE,cAAIV,SAAS,CAACQ,CAAD,CAAT,CAAaE,CAAb,EAAgBO,SAAhB,IAA6BjB,SAAS,CAACQ,CAAD,CAAT,CAAaE,CAAb,EAAgBI,MAAjD,EACA;AACEoB,YAAAA,aAAa;AACd;AACF;AACF;;AAED,UAAIC,GAAG,GAAG,CAAV;;AAEA,UAAID,aAAa,IAAI,EAArB,EACA;AACEC,QAAAA,GAAG,GAAG,CAAN;AACD;;AAED,aAAOA,GAAP;AACD;;;mCAEcC,C,EAAGzB,C,EAAGC,C,EACrB;AACEwB,MAAAA,CAAC,CAACC,cAAF;AACA,UAAIC,KAAK,GAAG,KAAKvC,KAAL,CAAWC,SAAvB;;AAEA,UAAIsC,KAAK,CAAC3B,CAAD,CAAL,CAASC,CAAT,EAAYG,UAAhB,EACA;AACE;AACD;;AAED,UAAIuB,KAAK,CAAC3B,CAAD,CAAL,CAASC,CAAT,EAAYK,SAAhB,EACA;AACEqB,QAAAA,KAAK,CAAC3B,CAAD,CAAL,CAASC,CAAT,EAAYK,SAAZ,GAAwB,KAAxB;AACD,OAHD,MAKA;AACEqB,QAAAA,KAAK,CAAC3B,CAAD,CAAL,CAASC,CAAT,EAAYK,SAAZ,GAAwB,IAAxB;AACD;;AAED,UAAI,KAAKsB,YAAL,CAAkBD,KAAlB,KAA4B,CAAhC,EACA;AACE,aAAKE,WAAL;AACAT,QAAAA,KAAK,CAAC,SAAD,CAAL;AACD;;AAED,WAAKJ,QAAL,CAAc;AACZ3B,QAAAA,SAAS,EAAEsC;AADC,OAAd;AAID;;;gCAEWtC,S,EAAW;AAAA;;AACrB,aAAOyC,IAAI,CAACC,GAAL,CAAS,UAACC,OAAD,EAAa;AAC3B,eAAOA,OAAO,CAACD,GAAR,CAAY,UAACE,QAAD,EAAc;AAC/B,iBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,eAAD;AACE,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACC,WAAL,CAAiBD,QAAQ,CAACjC,CAA1B,EAA6BiC,QAAQ,CAAChC,CAAtC,CAAN;AAAA,aADX;AAEE,YAAA,KAAK,EAAE,eAACwB,CAAD;AAAA,qBAAO,MAAI,CAACU,cAAL,CAAoBV,CAApB,EAAuBQ,QAAQ,CAACjC,CAAhC,EAAmCiC,QAAQ,CAAChC,CAA5C,CAAP;AAAA,aAFT;AAGE,YAAA,KAAK,EAAEgC,QAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF;AAQD,SATM,CAAP;AAUD,OAXM,CAAP;AAYD;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,KAAKG,WAAL,CAAiB,KAAKhD,KAAL,CAAWC,SAA5B,CAFJ,CADF;AAOD;;;;EApU2CL,KAAK,CAACqD,S;;SAA/BlD,gB;AAuUrBA,gBAAgB,CAACmD,SAAjB,GAA6B;AAC3B9C,EAAAA,MAAM,EAAEP,SAAS,CAACsD,MADS;AAE3B9C,EAAAA,KAAK,EAAER,SAAS,CAACsD;AAFU,CAA7B","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport MinesweeperCell from './MinesweeperCell';\n\nexport default class MinesweeperBoard extends React.Component {\n  state = {\n    boardData: this.setupBoard(this.props.height, this.props.width),\n  };\n\n\n  // Gets initial board data\n  setupBoard(height, width)\n  {\n    let boardData = this.setBoardData(height, width);\n    boardData = this.setMines(height, width, boardData);\n    boardData = this.getNearbyMineCount(height, width, boardData);\n    return boardData;\n  }\n\n  setBoardData(height, width)\n  {\n    let boardData = [];\n    for (let i = 0; i < height; i++)\n    {\n      boardData.push([]);\n      for (let j = 0; j < width; j++)\n      {\n        boardData[i][j] =\n        {\n          x: i,\n          y: j,\n          nearbyMineCount: 0,\n          isMine: false,\n          isRevealed: false,\n          isEmpty: false,\n          isFlagged: false,\n        };\n      }\n    }\n    return boardData;\n  }\n\n  getRandomInt(max)\n  {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n\n  setMines(height, width, boardData)\n  {\n    let x = 0;\n    let y = 0;\n    let mines = 0;\n\n    while (mines < 10)\n    {\n      x = this.getRandomInt(8);\n      y = this.getRandomInt(8);\n      if (!boardData[x][y].isMine)\n      {\n        boardData[x][y].isMine = true;\n        mines++;\n      }\n    }\n\n    return boardData;\n  }\n\n  getNearbyMineCount(height, width, boardData)\n  {\n    let mineCount = 0\n    for (let i = 0; i < height; i++)\n    {\n      for (let j = 0; j < width; j++)\n      {\n        mineCount = this.mineCounter(i, j, boardData);\n        boardData[i][j].nearbyMineCount = mineCount\n\n        if (mineCount == 0)\n        {\n          boardData[i][j].isEmpty = true\n        }\n\n      }\n    }\n  }\n\n  mineCounter(x, y, boardData)\n  {\n    let mineCount = 0;\n    //top\n    if (x > 0 && boardData[x-1][y].isMine == true)\n    {\n      mineCount++;\n    }\n    //bottom\n    if (x < 7 && boardData[x+1][y].isMine == true)\n    {\n      mineCount++;\n    }\n    //left\n    if (y > 0 && boardData[x][y-1].isMine == true)\n    {\n      mineCount++;\n    }\n    //right\n    if (y < 7 && boardData[x][y+1].isMine == true)\n    {\n      mineCount++;\n    }\n    //top-left\n    if (x > 0 && y > 0 && boardData[x-1][y-1].isMine == true)\n    {\n      mineCount++;\n    }\n    //top-right\n    if (x > 0 && y < 7 && boardData[x-1][y+1].isMine == true)\n    {\n      mineCount++;\n    }\n    //bottom-left\n    if (x < 7 && y > 0 && boardData[x+1][y-1].isMine == true)\n    {\n      mineCount++;\n    }\n    //bottom-right\n    if (x < 7 && y < 7 && boardData[x+1][y+1].isMine == true)\n    {\n      mineCount++;\n    }\n\n    return mineCount;\n  }\n\n  showBoard()\n  {\n    let update = this.state.boardData;\n    for (let i = 0; i < 8; i++)\n    {\n      for (let j = 0; j < 8; j++)\n      {\n        update[i][j].isRevealed = true;\n      }\n    }\n    this.setState({\n      boardData: update\n    })\n  }\n\n  showEmpty(x, y, boardData)\n  {\n    if (x > 0 && (!boardData[x-1][y].isFlagged && !boardData[x-1][y].isRevealed && (boardData[x-1][y].isEmpty || !boardData[x-1][y].isMine)))\n    {\n      boardData[x-1][y].isRevealed = true;\n      this.showEmpty(x-1, y, boardData);\n    }\n    //bottom\n    if (x < 7 && (!boardData[x+1][y].isFlagged && !boardData[x+1][y].isRevealed && (boardData[x+1][y].isEmpty || !boardData[x+1][y].isMine)))\n    {\n      boardData[x+1][y].isRevealed = true;\n      this.showEmpty(x+1, y, boardData);\n    }\n    //left\n    if (y > 0 && (!boardData[x][y-1].isFlagged && !boardData[x][y-1].isRevealed && (boardData[x][y-1].isEmpty || !boardData[x][y-1].isMine)))\n    {\n      boardData[x][y-1].isRevealed = true;\n      this.showEmpty(x, y-1, boardData);\n    }\n    //right\n    if (y < 7 && (!boardData[x][y+1].isFlagged && !boardData[x][y+1].isRevealed && (boardData[x][y+1].isEmpty || !boardData[x][y+1].isMine)))\n    {\n      boardData[x][y+1].isRevealed = true;\n      this.showEmpty(x, y+1, boardData);\n    }\n    //top-left\n    if (x > 0 && y > 0 && (!boardData[x-1][y-1].isFlagged && !boardData[x-1][y-1].isRevealed && (boardData[x-1][y-1].isEmpty || !boardData[x-1][y-1].isMine)))\n    {\n      boardData[x-1][y-1].isRevealed = true;\n      this.showEmpty(x-1, y-1, boardData);\n    }\n    //top-right\n    if (x > 0 && y < 7 && (!boardData[x-1][y+1].isFlagged && !boardData[x-1][y+1].isRevealed && (boardData[x-1][y+1].isEmpty || !boardData[x-1][y+1].isMine)))\n    {\n      boardData[x-1][y+1].isRevealed = true;\n      this.showEmpty(x-1, y+1, boardData);\n    }\n    //bottom-left\n    if (x < 7 && y > 0 && (!boardData[x+1][y-1].isFlagged && !boardData[x+1][y-1].isRevealed && (boardData[x+1][y-1].isEmpty || !boardData[x+1][y-1].isMine)))\n    {\n      boardData[x+1][y-1].isRevealed = true;\n      this.showEmpty(x+1, y-1, boardData);\n    }\n    //bottom-right\n    if (x < 7 && y < 7 && (!boardData[x+1][y+1].isFlagged && !boardData[x+1][y+1].isRevealed && (boardData[x+1][y+1].isEmpty || !boardData[x+1][y+1].isMine)))\n    {\n      boardData[x+1][y+1].isRevealed = true;\n      this.showEmpty(x+1, y+1, boardData);\n    }\n\n    return boardData;\n  }\n\n  hiddenCells(boardData)\n  {\n    let hiddenCount = 0;\n    for (let i = 0; i < 8; i++)\n    {\n      for (let j = 0; j < 8; j++)\n      {\n        if (!boardData[i][j].isRevealed)\n        {\n          hiddenCount++;\n        }\n      }\n    }\n    return hiddenCount;\n  }\n\n  handleClick(x, y)\n  {\n    if (this.state.boardData[x][y].isRevealed || this.state.boardData[x][y].isFlagged)\n    {\n      return null;\n    }\n\n    if (this.state.boardData[x][y].isMine)\n    {\n      this.showBoard();\n      alert(\"game over, you lost\");\n    }\n\n    let updated = this.state.boardData;\n    updated[x][y].isFlagged = false;\n    updated[x][y].isRevealed = true;\n\n    if (updated[x][y].isEmpty)\n    {\n      updated = this.showEmpty(x, y, updated);\n    }\n\n    if (this.hiddenCells(updated) == 10)\n    {\n      this.showBoard();\n      alert(\"You Win\");\n    }\n\n    this.setState({\n      boardData: updated,\n    });\n  }\n\n  checkFlagWin(boardData)\n  {\n    let flagMineCount = 0;\n    for (let i = 0; i < 8; i++)\n    {\n      for (let j = 0; j < 8; j++)\n      {\n        if (boardData[i][j].isFlagged && boardData[i][j].isMine)\n        {\n          flagMineCount++;\n        }\n      }\n    }\n\n    let win = 0\n\n    if (flagMineCount == 10)\n    {\n      win = 1\n    }\n\n    return win;\n  }\n\n  handleFlagging(e, x, y)\n  {\n    e.preventDefault();\n    let board = this.state.boardData;\n\n    if (board[x][y].isRevealed)\n    {\n      return;\n    }\n\n    if (board[x][y].isFlagged)\n    {\n      board[x][y].isFlagged = false;\n    }\n    else\n    {\n      board[x][y].isFlagged = true;\n    }\n\n    if (this.checkFlagWin(board) == 1)\n    {\n      this.revealBoard();\n      alert(\"You Win\");\n    }\n\n    this.setState({\n      boardData: board,\n    });\n\n  }\n\n  renderBoard(boardData) {\n    return data.map((datarow) => {\n      return datarow.map((dataitem) => {\n        return (\n          <div>\n            <MinesweeperCell\n              onClick={() => this.handleClick(dataitem.x, dataitem.y)}\n              cMenu={(e) => this.handleFlagging(e, dataitem.x, dataitem.y)}\n              value={dataitem}\n            />\n          </div>);\n      })\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"board\">\n        {\n          this.renderBoard(this.state.boardData)\n        }\n      </div>\n    );\n  }\n}\n\nMinesweeperBoard.propTypes = {\n  height: PropTypes.number,\n  width: PropTypes.number,\n}\n"]},"metadata":{},"sourceType":"module"}